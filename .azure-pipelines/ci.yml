trigger:
- master

pr: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
  - repository: templates
    type: github
    name: swellaby/azure-pipelines-templates
    endpoint: swellaby

variables:
- group: swellbot-github
- group: letra

steps:
- template: templates/yml/python/combo/setup-pip.yml@templates
  parameters:
    pipInstall:
      requirementsFile: dev-requirements.txt
      taskDisplayName: 'Install dependencies'
- template: templates/yml/python/steps/run-invoke.yml@templates
  parameters:
    tasksAndArguments: 'lint'
    taskDisplayName: 'Lint'
- template: templates/yml/python/combo/run-pytest-ci.yml@templates
  parameters:
    test:
      additionalArgs: ''
      taskDisplayName: 'Run unit tests'
    publishTestResults:
      taskDisplayName: 'Publish unit test results'
      testResultsFormat: 'JUnit'
      testResultsFiles: 'junit.xml'
      searchFolder: $(Build.SourcesDirectory)/.test-reports/results/unit
      testRunTitle: 'letra::Unit Tests::CI - Build $(Build.BuildId)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/.test-reports/coverage/unit/cobertura.xml'
  displayName: 'Publish coverage results'

- script: |
    bash <(curl -s https://codecov.io/bash) -t $(codecovToken)
  displayName: 'Publish coverage to Codecov'

- script: |
    git checkout master
    git config user.name $(githubUser)
    git config user.email $(githubEmail)
    bumpversion patch
    export PACKAGE_VERSION=$(invoke print-version)
    echo "##vso[task.setvariable variable=packageVersion]$PACKAGE_VERSION"
  displayName: 'Bump version'

- template: templates/yml/any/sonar/run-sonar-cloud-cli-analysis.yml@templates
  parameters:
    projectVersion: $(packageVersion)

- script: |
    python setup.py sdist bdist_wheel
    ls -la dist/
  displayName: 'Generate distribution archives'

- script: |
    git push https://$(githubPat)@github.com/swellaby/letra.git
  displayName: 'Check-in bumped version files'

- task: ArchiveFiles@2
  displayName: 'Archive: full repo'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: tar
    archiveFile: '$(sourceRepoArchivePath)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: full repo'
  inputs:
    PathtoPublish: '$(sourceRepoArchivePath)'
    ArtifactName: '$(sourceRepoArtifactName)'

